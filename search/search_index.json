{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Copier PDM # Copier template for PDM projects. This copier template is mainly for my own usage, but feel free to try it out, or fork it! Features # Package manager # The template project uses PDM setup, with pre-defined pyproject.toml Documentation and changelog # Documentation is built with MkDocs ( Material theme Changelog is auto-generated from the fragments under news directory, with the power of towncrier Pre-commit and linter # pre-commit is used for both commit hook and linting, including the following hooks: flake8 black isort Tests # Tests run with pytest Multi-environment testing powered by nox Requirements # Make below requirements are met to use the copier template: Python 3 Git Copier Quick Start # copier \"https://github.com/pdm-project/copier-pdm.git\" <project_name> Or even shorter: copier \"gh:pdm-project/copier-pdm\" <project_name> See the documentation for more details.","title":"Overview"},{"location":"#copier-pdm","text":"Copier template for PDM projects. This copier template is mainly for my own usage, but feel free to try it out, or fork it!","title":"Copier PDM"},{"location":"#features","text":"","title":"Features"},{"location":"#package-manager","text":"The template project uses PDM setup, with pre-defined pyproject.toml","title":"Package manager"},{"location":"#documentation-and-changelog","text":"Documentation is built with MkDocs ( Material theme Changelog is auto-generated from the fragments under news directory, with the power of towncrier","title":"Documentation and changelog"},{"location":"#pre-commit-and-linter","text":"pre-commit is used for both commit hook and linting, including the following hooks: flake8 black isort","title":"Pre-commit and linter"},{"location":"#tests","text":"Tests run with pytest Multi-environment testing powered by nox","title":"Tests"},{"location":"#requirements","text":"Make below requirements are met to use the copier template: Python 3 Git Copier","title":"Requirements"},{"location":"#quick-start","text":"copier \"https://github.com/pdm-project/copier-pdm.git\" <project_name> Or even shorter: copier \"gh:pdm-project/copier-pdm\" <project_name> See the documentation for more details.","title":"Quick Start"},{"location":"changelog/","text":"Changelog #","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"code_of_conduct/","text":"Everyone interacting in the copier-pdm project's codebases and issue trackers is expected to follow the PSF Code of Conduct .","title":"Code of Conduct"},{"location":"contributing/","text":"Contributing # Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. Environment setup # To run the test suites locally, you only need two tools, copier and git . python3 -m pip install --user pipx pipx install copier Running tests # To run the tests, run bash tests/run-tests.sh or ./tests/run-tests.ps1 depending on which platform you are on. Serving docs # python3 -m venv venv . venv/bin/activate pip install mkdocs mkdocs-material mkdocs serve You can also install mkdocs with pipx and inject mkdocs-material in its venv, this way you don't need to create one yourself: python3 -m pip install --user pipx pipx install mkdocs pipx inject mkdocs mkdocs-material mkdocs serve","title":"Contributing"},{"location":"contributing/#contributing","text":"Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.","title":"Contributing"},{"location":"contributing/#environment-setup","text":"To run the test suites locally, you only need two tools, copier and git . python3 -m pip install --user pipx pipx install copier","title":"Environment setup"},{"location":"contributing/#running-tests","text":"To run the tests, run bash tests/run-tests.sh or ./tests/run-tests.ps1 depending on which platform you are on.","title":"Running tests"},{"location":"contributing/#serving-docs","text":"python3 -m venv venv . venv/bin/activate pip install mkdocs mkdocs-material mkdocs serve You can also install mkdocs with pipx and inject mkdocs-material in its venv, this way you don't need to create one yourself: python3 -m pip install --user pipx pipx install mkdocs pipx inject mkdocs mkdocs-material mkdocs serve","title":"Serving docs"}]}