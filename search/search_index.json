{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Copier PDM","text":"<p>Copier template for PDM projects.</p> <p>This copier template is mainly for my own usage, but feel free to try it out, or fork it!</p> <p>You need to install Copier first.</p>"},{"location":"#features","title":"Features","text":""},{"location":"#package-manager","title":"Package manager","text":"<p>The template project uses PDM setup, with pre-defined <code>pyproject.toml</code></p>"},{"location":"#documentation-and-changelog","title":"Documentation and changelog","text":"<ul> <li>Documentation is built with MkDocs   (Material theme</li> <li>Changelog is auto-generated from the fragments under <code>news</code> directory, with the power of towncrier</li> </ul>"},{"location":"#pre-commit-and-linter","title":"Pre-commit and linter","text":"<p>pre-commit is used for both commit hook and linting, including the following hooks:</p> <ul> <li>ruff</li> </ul>"},{"location":"#vscode-default-settings","title":"VSCode default settings","text":"<p>The <code>.vscode/settings.json</code> will also be generated with the project, to enable Pylance auto-completions and test discovery in VSCode.</p>"},{"location":"#tests","title":"Tests","text":"<ul> <li>Tests run with pytest</li> <li>Multi-environment testing powered by nox</li> </ul>"},{"location":"#requirements","title":"Requirements","text":"<p>Make below requirements are met to use the copier template:</p> <ul> <li>Python 3</li> <li>Git</li> <li>Copier</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>copier \"https://github.com/pdm-project/copier-pdm.git\" &lt;project_name&gt;\n</code></pre> <p>Or even shorter:</p> <pre><code>copier \"gh:pdm-project/copier-pdm\" &lt;project_name&gt;\n</code></pre> <p>See the documentation for more details.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"code_of_conduct/","title":"Code of Conduct","text":"<p>Everyone interacting in the copier-pdm project's codebases and issue trackers is expected to follow the PSF Code of Conduct.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p>"},{"location":"contributing/#environment-setup","title":"Environment setup","text":"<p>To run the test suites locally, you only need two tools, copier and <code>git</code>.</p> <pre><code>python3 -m pip install --user pipx\n\npipx install copier\n</code></pre>"},{"location":"contributing/#running-tests","title":"Running tests","text":"<p>To run the tests, run <code>bash tests/run-tests.sh</code> or <code>./tests/run-tests.ps1</code> depending on which platform you are on.</p>"},{"location":"contributing/#serving-docs","title":"Serving docs","text":"<pre><code>python3 -m venv venv\n. venv/bin/activate\npip install mkdocs mkdocs-material\nmkdocs serve\n</code></pre> <p>You can also install <code>mkdocs</code> with <code>pipx</code> and inject <code>mkdocs-material</code> in its venv, this way you don't need to create one yourself:</p> <pre><code>python3 -m pip install --user pipx\npipx install mkdocs\npipx inject mkdocs mkdocs-material\nmkdocs serve\n</code></pre>"}]}